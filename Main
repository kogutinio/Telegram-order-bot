from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import datetime

orders = []
order_id_counter = 1

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π /dodaj <—Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞>, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑.")

async def dodaj(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global order_id_counter
    text = ' '.join(context.args)
    if not text:
        await update.message.reply_text("‚ùó –£–∫–∞–∂–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞. –ü—Ä–∏–º–µ—Ä: /dodaj –î–æ—Å—Ç–∞–≤–∫–∞ —Å —É–ª. –ê –¥–æ –ë")
        return

    order_id = order_id_counter
    order_id_counter += 1

    orders.append({
        "id": order_id,
        "text": text,
        "status": "open",
        "taken_by": None,
        "timestamp": datetime.datetime.now()
    })

    keyboard = [[InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{order_id}")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(f"üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order_id}:\n{text}", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user = query.from_user.first_name
    data = query.data

    if data.startswith("accept_"):
        order_id = int(data.split("_")[1])
        for order in orders:
            if order["id"] == order_id and order["status"] == "open":
                order["status"] = "taken"
                order["taken_by"] = user
                await query.edit_message_text(
                    text=f"üü© –ó–∞–∫–∞–∑ #{order_id} –ø—Ä–∏–Ω—è—Ç:\n{order['text']}\nüë§ –ü—Ä–∏–Ω—è–ª: {user}"
                )
                return
        await query.edit_message_text("‚ùó –≠—Ç–æ—Ç –∑–∞–∫–∞–∑ —É–∂–µ –±—ã–ª –ø—Ä–∏–Ω—è—Ç.")

app = ApplicationBuilder().token(7755622558:AAFFTeDAjMYiVhaSMmktXANvOJADu1OarP0).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("dodaj", dodaj))
app.add_handler(CallbackQueryHandler(button_handler))
app.run_polling()
